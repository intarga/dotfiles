#
# wm independent hotkeys
#

# terminal emulator
super + Return
	alacritty

# program launcher
super + space
    rofi -show drun

# emoji picker
super + e
    rofi -show emoji -modi emoji -theme ~/.cache/wal/rofi-theme.rasi

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# dismiss notifications
ctrl + space
    dunstctl close
ctrl + shift + space
    dunstctl close-all

# datetime/battery notification
super + d
    ~/scripts/notify-sysinfo.sh

# screenshot
super + shift + p
    scrot '/home/intarga/Pictures/%Y-%m-%d_$wx$h.png'

# brightness control
XF86MonBrightness{Down,Up}
    brightnessctl s \
    {"$(brightnessctl g | awk '\{ print int($1 /1.4) \}')",\
    "$(brightnessctl g | awk '\{ print int(($1 + .72) * 1.4) \}')"};\
    notify-send -h string:x-dunst-stack-tag:backlight "Backlight" \
    `brightnessctl | grep -Eo "[0-9]+%"`

# volume control
XF86Audio{LowerVolume,RaiseVolume,Mute}
    amixer -D pulse sset Master {5%-, 5%+, 0%} ; \
    notify-send -h string:x-dunst-stack-tag:volume "Volume" \
    `amixer -D pulse get Master | grep -Eo -m 1 "[0-9]+%"`

# media control
XF86Audio{Play,Prev,Next}
    playerctl {play-pause,previous,next}

# change x keyboard language
shift + space
    ~/scripts/change-lang.sh

# compositor stop/start
super + c
    killall compton
super + shift + c
    compton &

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# toggle gaps
super + g
    case "$(bspc config window_gap)" in \
    0) bspc config window_gap 15 ;; \
    *) bspc config window_gap 0 ;; esac

# toggle bar
super + b
    case "$(bspc config left_padding)" in \
    0) bspc config left_padding 53 ; eww open bar ;; \
    *) bspc config left_padding 0 ; eww close bar ;; esac

# alternate between the tiled and monocle layout
super + f
	bspc desktop -l next

# swap the current node and the biggest node
super + m
	bspc node -s biggest.local

#
# state/flags
#

# set the window state
super + {t,shift + t,s}
	bspc node -t {tiled,pseudo_tiled,floating}

# set the node flags
super + ctrl + {s,h}
	bspc node -g {sticky,hidden}

# unhide windows in the current desktop
super + ctrl + shift + h
    while bspc node any.hidden.window -g hidden=off; do :; done

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the next/previous node in the current desktop
super + {_,shift + }Tab
	bspc node -f {next,prev}.local.leaf

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
